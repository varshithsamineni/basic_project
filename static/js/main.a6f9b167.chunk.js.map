{"version":3,"sources":["Components/ContactCard.js","Components/ContactList.js","Components/Header.js","Components/AddContacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactCard","props","React","createElement","className","contact","name","email","style","color","marginTop","onClick","clickHandler","id","ContactList","console","log","contacts","deleteContactHandler","getContactId","renderContactList","map","key","Header","AddContact","_useState","useState","_useState2","_slicedToArray","user","setUser","onSubmit","e","preventDefault","addContactHandler","alert","type","value","pleceholder","onChange","_objectSpread","target","placeholder","App","setContacts","useEffect","retriveContacts","JSON","parse","localStorage","getItem","setItem","stringify","concat","_toConsumableArray","uuidv4","newContactList","filter","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.a6f9b167.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ContactCard = (props) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <div className=\"content\">\r\n        <div className=\"header\">{props.contact.name}</div>\r\n        <div>{props.contact.email}</div>\r\n      </div>\r\n      <i\r\n        className=\"trash alternate outline icon\"\r\n        style={{ color: \"red\", marginTop: \"7px\" }}\r\n        onClick={() => props.clickHandler(props.contact.id)}\r\n      ></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import React from \"react\";\r\nimport ContactCard from './ContactCard';\r\nconst ContactList = (props) => {\r\n    console.log(props.contacts);\r\n    \r\n    const deleteContactHandler=(id)=>{\r\n        props.getContactId(id);\r\n\r\n    }\r\n    const renderContactList=props.contacts.map((contact)=>{\r\n        return (\r\n            <ContactCard contact={contact} clickHandler={deleteContactHandler} key={contact.id}/>\r\n        )\r\n    })\r\n    return ( \r\n            <div className=\"ui celled list \">{renderContactList}</div>\r\n     );\r\n}\r\n \r\nexport default ContactList;","import React from 'react';\r\nconst Header = () => {\r\n    return ( \r\n        <div className=\"ui fixed menu\">\r\n            <div className=\"ui container menu\">\r\n        <h2>Contact Manager</h2>\r\n        </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport {useState} from \"react\";\r\nconst AddContact = (props) => {\r\n    const [user,setUser]=useState({name:'',email:''});\r\n    const add=(e)=>{\r\n        e.preventDefault();\r\n        if(user.name===\"\"||user.email===\"\")\r\n        {\r\n            alert(\"all fields are mandatory\");\r\n            return;\r\n        }\r\n       // console.log(user);\r\n       props.addContactHandler(user);\r\n       setUser({name:'',email:''});\r\n\r\n    };\r\n    return ( \r\n        <div className=\"ui main\">\r\n            <h2>Add Contact</h2>\r\n            <form className=\"ui form\" onSubmit={add}>\r\n                <div className=\"field\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" name=\"name\" value={user.name} pleceholder=\"Name\" onChange={(e)=>setUser({...user,name:e.target.value})}></input>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" name=\"email\" value={user.email} placeholder=\"Email\" onChange={(e)=>setUser({...user,email:e.target.value})}></input>\r\n                   \r\n                </div>\r\n                <button className=\"ui button blue\">Add</button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AddContact;","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './Components/ContactList';\nimport Header from \"./Components/Header\";\nimport AddContact from './Components/AddContacts';\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n\n  const addContactHandler = (contact) => {\n  \n    setContacts([...contacts, { id:uuidv4(),...contact}]);\n  };\n  const removeContactHandler=(id)=>{\n    const newContactList=contacts.filter((contact)=>{\n      return contact.id!==id;\n    });\n    setContacts(newContactList);\n  }\n  useEffect(() => {\n    const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retriveContacts) setContacts(retriveContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"ui container\">\n        <Header />\n        <AddContact addContactHandler={addContactHandler} />\n        <ContactList contacts={contacts} getContactId={removeContactHandler} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}